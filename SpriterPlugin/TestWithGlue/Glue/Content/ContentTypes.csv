FriendlyName (required),QualifiedRuntimeTypeName,QualifiedSaveTypeName,Extension,AddToManagersMethod,RemoveFromLayerMethod,LayeredAddToManagersMethod,MakeManuallyUpdatedMethod,ActivityMethod,CustomLoadMethod,AfterCustomActivityMethod,DestroyMethod,RecycledDestroyMethod,SupportsMakeOneWay,ShouldBeDisposed,ExtraVariablesPattern,ShouldAttach,AdjustRelativeZ,AttachToNullOnlyMethod,FindByNameSyntax,MustBeAddedToContentPipeline,CanBeCloned,CustomCloneMethod,HasCursorIsOn,HasVisibleProperty,PostInitializeCode,ContentImporter,ContentProcessor,CanIgnorePausing
Animation 3D List (.a3dx),QualifiedType = FlatRedBall.Graphics.Animation3D.Animation3DList,FlatRedBall.Content.Animation3D.Animation3DListSave,a3dx,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE
Animation Chain List (.achx),QualifiedType = FlatRedBall.Graphics.Animation.AnimationChainList,FlatRedBall.Content.AnimationChain.AnimationChainListSave,achx,,,,,,,,,,FALSE,,,FALSE,,,"[""OBJECTNAME""]",FALSE,FALSE,,FALSE,FALSE,,AnimationChainArrayImporter,AnimationChainArrayProcessor,FALSE
Scene (.scnx),QualifiedType = FlatRedBall.Scene,FlatRedBall.Content.SpriteEditorScene,scnx,this.AddToManagers(),mLayer.Remove(this),this.AddToManagers(mLayer),this.ConvertToManuallyUpdated(),,,this.ManageAll(),"this.RemoveFromManagers(ContentManagerName != ""Global"")",this.RemoveFromManagers(false),TRUE,,,TRUE,"this.ShiftRelative(0,0,value)",AttachAllDetachedTo,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,SceneFileImporter,SceneFileProcessor,TRUE
SceneSave (.scnx),QualifiedType = FlatRedBall.Content.SpriteEditorScene,FlatRedBall.Content.SpriteEditorScene,scnx,,,,,,"{THIS} = SpriteEditorScene.FromFile(""{FILE_NAME}"");",,,,FALSE,,,FALSE,,,,FALSE,TRUE,,FALSE,FALSE,,,,FALSE
Shape Collection (.shcx),QualifiedType = FlatRedBall.Math.Geometry.ShapeCollection,FlatRedBall.Content.Math.Geometry.ShapeCollectionSave,shcx,this.AddToManagers(),,this.AddToManagers(mLayer),,,,,"this.RemoveFromManagers(ContentManagerName != ""Global"")",this.RemoveFromManagers(false),TRUE,,,TRUE,"this.ShiftRelative(0,0,value)",AttachAllDetachedTo,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,ShapeCollectionImporter,ShapeCollectionProcessor,TRUE
Emitter List (.emix),QualifiedType = FlatRedBall.Graphics.Particle.EmitterList,FlatRedBall.Content.Particle.EmitterSaveList,emix,this.AddToManagers(),,this.AddToManagers(mLayer),,,,,"this.RemoveFromManagers(ContentManagerName != ""Global"")",this.RemoveFromManagers(false),TRUE,,,TRUE,"this.ShiftRelative(0,0,value)",AttachAllDetachedTo,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,FALSE,,EmitterImporter,EmitterProcessor,TRUE
Sprite Rig (.srgx),QualifiedType = FlatRedBall.ManagedSpriteGroups.SpriteRig,FlatRedBall.Content.SpriteRig.SpriteRigSave,srgx,this.AddToManagers(),,,,,,this.Manage(),this.Destroy(),,FALSE,,,TRUE,,,,FALSE,TRUE,,FALSE,FALSE,,SpriteRigImporter,SpriteRigProcessor,FALSE
Node Network (.nntx),QualifiedType = FlatRedBall.AI.Pathfinding.NodeNetwork,FlatRedBall.Content.AI.Pathfinding.NodeNetworkSave,nntx,,,,,,,,this.Visible = false,,FALSE,,,FALSE,,,"FindByName(""OBJECTNAME"")",FALSE,FALSE,,FALSE,FALSE,,NodeNetworkImporter,NodeNetworkProcessor,FALSE
,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spline List (.splx),QualifiedType = FlatRedBall.Math.Splines.SplineList,FlatRedBall.Content.Math.Splines.SplineSaveList,splx,,,,,,,,,,FALSE,,,FALSE,,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,FALSE,,,,FALSE
Text (.txt),QualifiedType = System.String,,txt,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,TRUE,TRUE,,,,FALSE
Texture (.bmp),QualifiedType = Microsoft.Xna.Framework.Graphics.Texture2D,,bmp,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,TextureImporter,TextureProcessor,FALSE
Texture (.png),QualifiedType = Microsoft.Xna.Framework.Graphics.Texture2D,,png,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,TextureImporter,TextureProcessor,FALSE
Texture (.jpg),QualifiedType = Microsoft.Xna.Framework.Graphics.Texture2D,,jpg,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,TextureImporter,TextureProcessor,FALSE
Texture (.tga),QualifiedType = Microsoft.Xna.Framework.Graphics.Texture2D,,tga,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,TextureImporter,TextureProcessor,FALSE
Texture (.gif),QualifiedType = Microsoft.Xna.Framework.Graphics.Texture2D,,gif,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
Model (.x),,,x,,,,,,,,,,FALSE,,,FALSE,,,,TRUE,FALSE,,FALSE,TRUE,,XImporter,ModelProcessor,FALSE
Model (.fbx),,,fbx,,,,,,,,,,FALSE,,,FALSE,,,,TRUE,FALSE,,FALSE,TRUE,,FbxImporter,ModelProcessor,FALSE
Model (.wme),QualifiedType = FlatRedBall.Content.Model.Helpers.CustomModel,,wme,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,TRUE,,,,FALSE
Animation 3D (.wam),,,wam,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
Hierarchy 3D (.whe),,,whe,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
Song (.wma),QualifiedType = Microsoft.Xna.Framework.Media.Song,,wma,"FlatRedBall.Audio.AudioManager.StopAndDisposeCurrentSongIfNameDiffers(this.Name); FlatRedBall.Audio.AudioManager.PlaySong(this, false, ContentManagerName == ""Global"")",,,,,,,FlatRedBall.Audio.AudioManager.StopSong(),,FALSE,TRUE,,FALSE,,,,TRUE,FALSE,,FALSE,FALSE,,WmaImporter,SongProcessor,FALSE
Song (.mp3),QualifiedType = Microsoft.Xna.Framework.Media.Song,,mp3,"FlatRedBall.Audio.AudioManager.StopAndDisposeCurrentSongIfNameDiffers(this.Name); FlatRedBall.Audio.AudioManager.PlaySong(this, false, ContentManagerName == ""Global"")",,,,,,,FlatRedBall.Audio.AudioManager.StopSong(),,FALSE,TRUE,,FALSE,,,,TRUE,FALSE,,FALSE,FALSE,,Mp3Importer,SongProcessor,FALSE
Song (.ogg),QualifiedType = Microsoft.Xna.Framework.Media.Song,,ogg,"FlatRedBall.Audio.AudioManager.StopAndDisposeCurrentSongIfNameDiffers(this.Name); FlatRedBall.Audio.AudioManager.PlaySong(this, false, ContentManagerName == ""Global"")",,,,,,,FlatRedBall.Audio.AudioManager.StopSong(),,FALSE,TRUE,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
SoundEffect (.wav),QualifiedType = Microsoft.Xna.Framework.Audio.SoundEffect,,wav,,,,,,,,,,FALSE,,,FALSE,,,,TRUE,FALSE,,FALSE,FALSE,,WavImporter,SoundEffectProcessor,FALSE
SoundEffect (.ogg),QualifiedType = Microsoft.Xna.Framework.Audio.SoundEffect,,ogg,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
FontPattern (.fnt),QualifiedType = FlatRedBall.Graphics.BitmapFont,,fnt,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
BitmapFont (.bmfc),QualifiedType = FlatRedBall.Graphics.BitmapFont,,bmfc,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,,,FALSE
SpriteFont (.spritefont),,,spritefont,,,,,,,,,,FALSE,,,,,,,,,,,,,FontDescriptionImporter,FontDescriptionProcessor,FALSE
Layer,QualifiedType = FlatRedBall.Graphics.Layer,,,SpriteManager.AddLayer(this),,,,,,,SpriteManager.RemoveLayer(this),,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,TRUE,,,,FALSE
,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AxisAlignedRectangle,QualifiedType = FlatRedBall.Math.Geometry.AxisAlignedRectangle,,,ShapeManager.AddAxisAlignedRectangle(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible; float X; float Y; float ScaleX; float ScaleY; Color Color,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
AxisAlignedCube,QualifiedType = FlatRedBall.Math.Geometry.AxisAlignedCube,,,ShapeManager.AddAxisAlignedCube(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible;  float X; float Y;,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,TRUE,,,,TRUE
Circle,QualifiedType = FlatRedBall.Math.Geometry.Circle,,,ShapeManager.AddCircle(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible; float X; float Y; float Radius; Color Color;,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
Line,QualifiedType = FlatRedBall.Math.Geometry.Line,,,ShapeManager.AddLine(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,TRUE,,,,TRUE
Polygon,QualifiedType = FlatRedBall.Math.Geometry.Polygon,,,ShapeManager.AddPolygon(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
Sphere,QualifiedType = FlatRedBall.Math.Geometry.Sphere,,,ShapeManager.AddSphere(this),,"ShapeManager.AddToLayer(this, mLayer)",,,,,this.Detach(); ShapeManager.Remove(this),,FALSE,,bool Visible,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
PositionedObjectList (Generic),QualifiedType = FlatRedBall.Math.PositionedObjectList<T>,,,,,,,,,,,,TRUE,,,FALSE,,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,FALSE,,,,TRUE
Sprite,QualifiedType = FlatRedBall.Sprite,FlatRedBall.Content.Scene.SpriteSave,,SpriteManager.AddSprite(this),mLayer.Remove(this),"SpriteManager.AddToLayer(this, mLayer)",SpriteManager.ConvertToManuallyUpdated(this),,,,this.Detach(); SpriteManager.RemoveSprite(this),,FALSE,,float X; float Y; float Z; float ScaleX; float ScaleY; float PixelSize; Texture2D Texture; AnimationChainList AnimationChains;,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
,,,,SpriteManager.AddZBufferedSprite(this),,"SpriteManager.AddToLayerZBuffered(this, mLayer)",,,,,,,,,,,,,,,,,,,,,,
SpriteChain,QualifiedType = FlatRedBall.ManagedSpriteGroups.SpriteChain,,,,,,,,,,this.Destroy(),,FALSE,,,,,,,FALSE,FALSE,,FALSE,TRUE,,,,FALSE
SpriteGrid,QualifiedType = FlatRedBall.ManagedSpriteGroups.SpriteGrid,,,this.PopulateGrid(),this.Layer = null,this.Layer = mLayer;  this.PopulateGrid(),this.CreatesAutomaticallyUpdatedSprites = false,,,this.Manage(),this.Destroy(),,FALSE,,,FALSE,,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,FALSE,,,,FALSE
Emitter,QualifiedType = FlatRedBall.Graphics.Particle.Emitter,FlatRedBall.Content.Particle.EmitterSave,,SpriteManager.AddEmitter(this),,"SpriteManager.AddEmitter(this, mLayer)",,,,,this.Detach(); SpriteManager.RemoveEmitter(this),,FALSE,,float X; float Y; bool TimedEmission,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,FALSE,FALSE,,,,TRUE
SpriteFrame,QualifiedType = FlatRedBall.ManagedSpriteGroups.SpriteFrame,,,SpriteManager.AddSpriteFrame(this),mLayer.Remove(this),"SpriteManager.AddToLayer(this, mLayer)",,,,,this.Detach(); SpriteManager.RemoveSpriteFrame(this),,FALSE,,foat X; float Y; float Z; float ScaleX; float ScaleY; Texture2D Texture,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
Text,QualifiedType = FlatRedBall.Graphics.Text,,,TextManager.AddText(this); this.SetPixelPerfectScale(SpriteManager.Camera),mLayer.Remove(this),"TextManager.AddToLayer(this, mLayer)",TextManager.ConvertToManuallyUpdated(this),,,,this.Detach(); TextManager.RemoveText(this),,FALSE,,string DisplayText; float X; float Y; float Z; float Scale; float Spacing; float NewLineDistance; BitmapFont Font;,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",FALSE,TRUE,,TRUE,TRUE,,,,TRUE
Spline,QualifiedType = FlatRedBall.Math.Splines.Spline,,,,,,,,,,,,FALSE,,,FALSE,,,"FindByName(""OBJECTNAME"")",FALSE,FALSE,,FALSE,FALSE,this.CalculateVelocities();  this.CalculateAccelerations();,,,FALSE
AnimationChain,QualifiedType = FlatRedBall.Graphics.Animation.AnimationChain,FlatRedBall.Content.AnimationChain.AnimationChainSave,,,,,,,,,,,FALSE,,,FALSE,,,"[""OBJECTNAME""]",FALSE,FALSE,,FALSE,FALSE,,,,FALSE
PositionedModel,QualifiedType = FlatRedBall.Graphics.Model.PositionedModel,,,ModelManager.AddModel(this),mLayer.Remove(this),,ModelManager.ConvertToManuallyUpdated(this),,,,this.Detach(); ModelManager.RemoveModel(this),,FALSE,,,TRUE,this.RelativeZ += value,,"FindByName(""OBJECTNAME"")",TRUE,TRUE,,TRUE,TRUE,,,,TRUE
Camera,QualifiedType = FlatRedBall.Camera,,,,,,,,,,this.Detach(),,FALSE,,float X; float Y;,TRUE,this.RelativeZ += value,,,FALSE,,,FALSE,FALSE,,,,TRUE
Effect (.fx),QualifiedType = Microsoft.Xna.Framework.Graphics.Effect,,fx,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,EffectImporter,EffectProcessor,FALSE
Video (.wmv),QualifiedType = Microsoft.Xna.Framework.Media.Video,,wmv,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,WmvImporter,VideoProcessor,FALSE
XactProject (.xap),,,xap,,,,,,,,,,FALSE,,,FALSE,,,,FALSE,FALSE,,FALSE,FALSE,,XactImporter,XactProcessor,FALSE
SoundEffectInstance (.wav),QualifiedType = Microsoft.Xna.Framework.Audio.SoundEffectInstance,,wav,,,,,,,,if(this.IsDisposed == false) { this.Stop();  this.Dispose(); },,FALSE,,,,,,,,TRUE,{THIS} = {SOURCE_FILE}.CreateInstance();,FALSE,FALSE,,,,FALSE
